package aspect;

import java.lang.reflect.Method;

import org.aspectj.lang.JoinPoint;
import org.aspectj.lang.ProceedingJoinPoint;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import tran.TranManager;


@Component
public class TxAspect {
	
	@Autowired
	private TranManager tx;
	
	public void before(JoinPoint joinPoint) throws NoSuchMethodException, SecurityException{

		System.out.println(joinPoint.getTarget().getClass());
		System.out.println(joinPoint.getSignature().getName());
	}
	
	private long time;
	
	public void around(ProceedingJoinPoint joinPoint) throws Throwable{
		
		tx.begin();
		
		time=System.currentTimeMillis();	
		joinPoint.proceed();
		time = System.currentTimeMillis()-time;
		System.out.println("方法调用的时间为:"+time+"ms");
		tx.commit();
		
	}
	
}
